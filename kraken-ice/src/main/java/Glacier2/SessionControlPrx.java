// **********************************************************************
//
// Copyright (c) 2003-2010 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************

// Ice version 3.4.1

package Glacier2;

// <auto-generated>
//
// Generated from file `Session.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>


/**
 * An administrative session control object, which is tied to the
 * lifecycle of a {@link Session}.
 * 
 * @see Session
 * 
 **/
public interface SessionControlPrx extends Ice.ObjectPrx
{
    /**
     * Access the object that manages the allowable categories
     * for object identities for this session. 
     * 
     * @return A StringSet object.
     * 
     **/
    public StringSetPrx categories();

    /**
     * Access the object that manages the allowable categories
     * for object identities for this session. 
     * 
     * @param __ctx The Context map to send with the invocation.
     * @return A StringSet object.
     * 
     **/
    public StringSetPrx categories(java.util.Map<String, String> __ctx);

    /**
     * Access the object that manages the allowable categories
     * for object identities for this session. 
     * 
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_categories();

    /**
     * Access the object that manages the allowable categories
     * for object identities for this session. 
     * 
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_categories(java.util.Map<String, String> __ctx);

    /**
     * Access the object that manages the allowable categories
     * for object identities for this session. 
     * 
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_categories(Ice.Callback __cb);

    /**
     * Access the object that manages the allowable categories
     * for object identities for this session. 
     * 
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_categories(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * Access the object that manages the allowable categories
     * for object identities for this session. 
     * 
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_categories(Callback_SessionControl_categories __cb);

    /**
     * Access the object that manages the allowable categories
     * for object identities for this session. 
     * 
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_categories(java.util.Map<String, String> __ctx, Callback_SessionControl_categories __cb);

    /**
     * Access the object that manages the allowable categories
     * for object identities for this session. 
     * 
     * @param __result The asynchronous result object.
     * @return A StringSet object.
     * 
     **/
    public StringSetPrx end_categories(Ice.AsyncResult __result);

    /**
     * Access the object that manages the allowable adapter identities
     * for objects for this session. 
     * 
     * @return A StringSet object.
     * 
     **/
    public StringSetPrx adapterIds();

    /**
     * Access the object that manages the allowable adapter identities
     * for objects for this session. 
     * 
     * @param __ctx The Context map to send with the invocation.
     * @return A StringSet object.
     * 
     **/
    public StringSetPrx adapterIds(java.util.Map<String, String> __ctx);

    /**
     * Access the object that manages the allowable adapter identities
     * for objects for this session. 
     * 
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_adapterIds();

    /**
     * Access the object that manages the allowable adapter identities
     * for objects for this session. 
     * 
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_adapterIds(java.util.Map<String, String> __ctx);

    /**
     * Access the object that manages the allowable adapter identities
     * for objects for this session. 
     * 
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_adapterIds(Ice.Callback __cb);

    /**
     * Access the object that manages the allowable adapter identities
     * for objects for this session. 
     * 
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_adapterIds(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * Access the object that manages the allowable adapter identities
     * for objects for this session. 
     * 
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_adapterIds(Callback_SessionControl_adapterIds __cb);

    /**
     * Access the object that manages the allowable adapter identities
     * for objects for this session. 
     * 
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_adapterIds(java.util.Map<String, String> __ctx, Callback_SessionControl_adapterIds __cb);

    /**
     * Access the object that manages the allowable adapter identities
     * for objects for this session. 
     * 
     * @param __result The asynchronous result object.
     * @return A StringSet object.
     * 
     **/
    public StringSetPrx end_adapterIds(Ice.AsyncResult __result);

    /**
     * Access the object that manages the allowable object identities
     * for this session. 
     * 
     * @return An IdentitySet object.
     * 
     **/
    public IdentitySetPrx identities();

    /**
     * Access the object that manages the allowable object identities
     * for this session. 
     * 
     * @param __ctx The Context map to send with the invocation.
     * @return An IdentitySet object.
     * 
     **/
    public IdentitySetPrx identities(java.util.Map<String, String> __ctx);

    /**
     * Access the object that manages the allowable object identities
     * for this session. 
     * 
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_identities();

    /**
     * Access the object that manages the allowable object identities
     * for this session. 
     * 
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_identities(java.util.Map<String, String> __ctx);

    /**
     * Access the object that manages the allowable object identities
     * for this session. 
     * 
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_identities(Ice.Callback __cb);

    /**
     * Access the object that manages the allowable object identities
     * for this session. 
     * 
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_identities(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * Access the object that manages the allowable object identities
     * for this session. 
     * 
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_identities(Callback_SessionControl_identities __cb);

    /**
     * Access the object that manages the allowable object identities
     * for this session. 
     * 
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_identities(java.util.Map<String, String> __ctx, Callback_SessionControl_identities __cb);

    /**
     * Access the object that manages the allowable object identities
     * for this session. 
     * 
     * @param __result The asynchronous result object.
     * @return An IdentitySet object.
     * 
     **/
    public IdentitySetPrx end_identities(Ice.AsyncResult __result);

    /**
     * Get the session timeout.
     * 
     * @return The timeout.
     * 
     **/
    public int getSessionTimeout();

    /**
     * Get the session timeout.
     * 
     * @param __ctx The Context map to send with the invocation.
     * @return The timeout.
     * 
     **/
    public int getSessionTimeout(java.util.Map<String, String> __ctx);

    /**
     * Get the session timeout.
     * 
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getSessionTimeout();

    /**
     * Get the session timeout.
     * 
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getSessionTimeout(java.util.Map<String, String> __ctx);

    /**
     * Get the session timeout.
     * 
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getSessionTimeout(Ice.Callback __cb);

    /**
     * Get the session timeout.
     * 
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getSessionTimeout(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * Get the session timeout.
     * 
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getSessionTimeout(Callback_SessionControl_getSessionTimeout __cb);

    /**
     * Get the session timeout.
     * 
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getSessionTimeout(java.util.Map<String, String> __ctx, Callback_SessionControl_getSessionTimeout __cb);

    /**
     * Get the session timeout.
     * 
     * @param __result The asynchronous result object.
     * @return The timeout.
     * 
     **/
    public int end_getSessionTimeout(Ice.AsyncResult __result);

    /**
     * Destroy the associated session.
     * 
     **/
    public void destroy();

    /**
     * Destroy the associated session.
     * 
     * @param __ctx The Context map to send with the invocation.
     **/
    public void destroy(java.util.Map<String, String> __ctx);

    /**
     * Destroy the associated session.
     * 
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_destroy();

    /**
     * Destroy the associated session.
     * 
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_destroy(java.util.Map<String, String> __ctx);

    /**
     * Destroy the associated session.
     * 
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_destroy(Ice.Callback __cb);

    /**
     * Destroy the associated session.
     * 
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_destroy(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * Destroy the associated session.
     * 
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_destroy(Callback_SessionControl_destroy __cb);

    /**
     * Destroy the associated session.
     * 
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_destroy(java.util.Map<String, String> __ctx, Callback_SessionControl_destroy __cb);

    /**
     * Destroy the associated session.
     * 
     * @param __result The asynchronous result object.
     **/
    public void end_destroy(Ice.AsyncResult __result);

    /**
     * Destroy the associated session.
     * 
     * @param __cb The callback object for the operation.
     **/
    public boolean destroy_async(AMI_SessionControl_destroy __cb);

    /**
     * Destroy the associated session.
     * 
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean destroy_async(AMI_SessionControl_destroy __cb, java.util.Map<String, String> __ctx);
}
