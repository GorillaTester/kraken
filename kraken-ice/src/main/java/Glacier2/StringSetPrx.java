// **********************************************************************
//
// Copyright (c) 2003-2010 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************

// Ice version 3.4.1

package Glacier2;

// <auto-generated>
//
// Generated from file `Session.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>


/**
 * An object for managing the set of identity constraints for specific
 * parts of object identity on a
 * {@link Session}. 
 * 
 * @see Session
 * @see SessionControl
 * 
 **/
public interface StringSetPrx extends Ice.ObjectPrx
{
    /**
     * Add a sequence of strings to this set of constraints. Order is
     * not preserved and duplicates are implicitly removed.
     * 
     * @param additions The sequence of strings to be added.
     * 
     **/
    public void add(String[] additions);

    /**
     * Add a sequence of strings to this set of constraints. Order is
     * not preserved and duplicates are implicitly removed.
     * 
     * @param additions The sequence of strings to be added.
     * 
     * @param __ctx The Context map to send with the invocation.
     **/
    public void add(String[] additions, java.util.Map<String, String> __ctx);

    /**
     * Add a sequence of strings to this set of constraints. Order is
     * not preserved and duplicates are implicitly removed.
     * 
     * @param additions The sequence of strings to be added.
     * 
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_add(String[] additions);

    /**
     * Add a sequence of strings to this set of constraints. Order is
     * not preserved and duplicates are implicitly removed.
     * 
     * @param additions The sequence of strings to be added.
     * 
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_add(String[] additions, java.util.Map<String, String> __ctx);

    /**
     * Add a sequence of strings to this set of constraints. Order is
     * not preserved and duplicates are implicitly removed.
     * 
     * @param additions The sequence of strings to be added.
     * 
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_add(String[] additions, Ice.Callback __cb);

    /**
     * Add a sequence of strings to this set of constraints. Order is
     * not preserved and duplicates are implicitly removed.
     * 
     * @param additions The sequence of strings to be added.
     * 
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_add(String[] additions, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * Add a sequence of strings to this set of constraints. Order is
     * not preserved and duplicates are implicitly removed.
     * 
     * @param additions The sequence of strings to be added.
     * 
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_add(String[] additions, Callback_StringSet_add __cb);

    /**
     * Add a sequence of strings to this set of constraints. Order is
     * not preserved and duplicates are implicitly removed.
     * 
     * @param additions The sequence of strings to be added.
     * 
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_add(String[] additions, java.util.Map<String, String> __ctx, Callback_StringSet_add __cb);

    /**
     * Add a sequence of strings to this set of constraints. Order is
     * not preserved and duplicates are implicitly removed.
     * 
     * @param __result The asynchronous result object.
     **/
    public void end_add(Ice.AsyncResult __result);

    /**
     * Remove a sequence of strings from this set of constraints. No
     * errors are returned if an entry is not found.
     * 
     * @param deletions The sequence of strings to be removed.
     * 
     **/
    public void remove(String[] deletions);

    /**
     * Remove a sequence of strings from this set of constraints. No
     * errors are returned if an entry is not found.
     * 
     * @param deletions The sequence of strings to be removed.
     * 
     * @param __ctx The Context map to send with the invocation.
     **/
    public void remove(String[] deletions, java.util.Map<String, String> __ctx);

    /**
     * Remove a sequence of strings from this set of constraints. No
     * errors are returned if an entry is not found.
     * 
     * @param deletions The sequence of strings to be removed.
     * 
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_remove(String[] deletions);

    /**
     * Remove a sequence of strings from this set of constraints. No
     * errors are returned if an entry is not found.
     * 
     * @param deletions The sequence of strings to be removed.
     * 
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_remove(String[] deletions, java.util.Map<String, String> __ctx);

    /**
     * Remove a sequence of strings from this set of constraints. No
     * errors are returned if an entry is not found.
     * 
     * @param deletions The sequence of strings to be removed.
     * 
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_remove(String[] deletions, Ice.Callback __cb);

    /**
     * Remove a sequence of strings from this set of constraints. No
     * errors are returned if an entry is not found.
     * 
     * @param deletions The sequence of strings to be removed.
     * 
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_remove(String[] deletions, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * Remove a sequence of strings from this set of constraints. No
     * errors are returned if an entry is not found.
     * 
     * @param deletions The sequence of strings to be removed.
     * 
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_remove(String[] deletions, Callback_StringSet_remove __cb);

    /**
     * Remove a sequence of strings from this set of constraints. No
     * errors are returned if an entry is not found.
     * 
     * @param deletions The sequence of strings to be removed.
     * 
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_remove(String[] deletions, java.util.Map<String, String> __ctx, Callback_StringSet_remove __cb);

    /**
     * Remove a sequence of strings from this set of constraints. No
     * errors are returned if an entry is not found.
     * 
     * @param __result The asynchronous result object.
     **/
    public void end_remove(Ice.AsyncResult __result);

    /**
     * Returns a sequence of strings describing the constraints in this
     * set.
     * 
     * @return The sequence of strings for this set. 
     * 
     **/
    public String[] get();

    /**
     * Returns a sequence of strings describing the constraints in this
     * set.
     * 
     * @param __ctx The Context map to send with the invocation.
     * @return The sequence of strings for this set. 
     * 
     **/
    public String[] get(java.util.Map<String, String> __ctx);

    /**
     * Returns a sequence of strings describing the constraints in this
     * set.
     * 
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_get();

    /**
     * Returns a sequence of strings describing the constraints in this
     * set.
     * 
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_get(java.util.Map<String, String> __ctx);

    /**
     * Returns a sequence of strings describing the constraints in this
     * set.
     * 
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_get(Ice.Callback __cb);

    /**
     * Returns a sequence of strings describing the constraints in this
     * set.
     * 
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_get(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * Returns a sequence of strings describing the constraints in this
     * set.
     * 
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_get(Callback_StringSet_get __cb);

    /**
     * Returns a sequence of strings describing the constraints in this
     * set.
     * 
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_get(java.util.Map<String, String> __ctx, Callback_StringSet_get __cb);

    /**
     * Returns a sequence of strings describing the constraints in this
     * set.
     * 
     * @param __result The asynchronous result object.
     * @return The sequence of strings for this set. 
     * 
     **/
    public String[] end_get(Ice.AsyncResult __result);
}
