// **********************************************************************
//
// Copyright (c) 2003-2010 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************

// Ice version 3.4.1

package Ice;

// <auto-generated>
//
// Generated from file `Router.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>


/**
 * The Ice router interface. Routers can be set either globally with
 * {@link Communicator.setDefaultRouter}, or with <tt>ice_router</tt> on specific
 * proxies.
 * 
 **/
public interface RouterPrx extends Ice.ObjectPrx
{
    /**
     * Get the router's client proxy, i.e., the proxy to use for
     * forwarding requests from the client to the router.
     * 
     * @return The router's client proxy.
     * 
     **/
    public Ice.ObjectPrx getClientProxy();

    /**
     * Get the router's client proxy, i.e., the proxy to use for
     * forwarding requests from the client to the router.
     * 
     * @param __ctx The Context map to send with the invocation.
     * @return The router's client proxy.
     * 
     **/
    public Ice.ObjectPrx getClientProxy(java.util.Map<String, String> __ctx);

    /**
     * Get the router's client proxy, i.e., the proxy to use for
     * forwarding requests from the client to the router.
     * 
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getClientProxy();

    /**
     * Get the router's client proxy, i.e., the proxy to use for
     * forwarding requests from the client to the router.
     * 
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getClientProxy(java.util.Map<String, String> __ctx);

    /**
     * Get the router's client proxy, i.e., the proxy to use for
     * forwarding requests from the client to the router.
     * 
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getClientProxy(Ice.Callback __cb);

    /**
     * Get the router's client proxy, i.e., the proxy to use for
     * forwarding requests from the client to the router.
     * 
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getClientProxy(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * Get the router's client proxy, i.e., the proxy to use for
     * forwarding requests from the client to the router.
     * 
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getClientProxy(Callback_Router_getClientProxy __cb);

    /**
     * Get the router's client proxy, i.e., the proxy to use for
     * forwarding requests from the client to the router.
     * 
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getClientProxy(java.util.Map<String, String> __ctx, Callback_Router_getClientProxy __cb);

    /**
     * Get the router's client proxy, i.e., the proxy to use for
     * forwarding requests from the client to the router.
     * 
     * @param __result The asynchronous result object.
     * @return The router's client proxy.
     * 
     **/
    public Ice.ObjectPrx end_getClientProxy(Ice.AsyncResult __result);

    /**
     * Get the router's client proxy, i.e., the proxy to use for
     * forwarding requests from the client to the router.
     * 
     * @param __cb The callback object for the operation.
     **/
    public boolean getClientProxy_async(AMI_Router_getClientProxy __cb);

    /**
     * Get the router's client proxy, i.e., the proxy to use for
     * forwarding requests from the client to the router.
     * 
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean getClientProxy_async(AMI_Router_getClientProxy __cb, java.util.Map<String, String> __ctx);

    /**
     * Get the router's server proxy, i.e., the proxy to use for
     * forwarding requests from the server to the router.
     * 
     * @return The router's server proxy.
     * 
     **/
    public Ice.ObjectPrx getServerProxy();

    /**
     * Get the router's server proxy, i.e., the proxy to use for
     * forwarding requests from the server to the router.
     * 
     * @param __ctx The Context map to send with the invocation.
     * @return The router's server proxy.
     * 
     **/
    public Ice.ObjectPrx getServerProxy(java.util.Map<String, String> __ctx);

    /**
     * Get the router's server proxy, i.e., the proxy to use for
     * forwarding requests from the server to the router.
     * 
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getServerProxy();

    /**
     * Get the router's server proxy, i.e., the proxy to use for
     * forwarding requests from the server to the router.
     * 
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getServerProxy(java.util.Map<String, String> __ctx);

    /**
     * Get the router's server proxy, i.e., the proxy to use for
     * forwarding requests from the server to the router.
     * 
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getServerProxy(Ice.Callback __cb);

    /**
     * Get the router's server proxy, i.e., the proxy to use for
     * forwarding requests from the server to the router.
     * 
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getServerProxy(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * Get the router's server proxy, i.e., the proxy to use for
     * forwarding requests from the server to the router.
     * 
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getServerProxy(Callback_Router_getServerProxy __cb);

    /**
     * Get the router's server proxy, i.e., the proxy to use for
     * forwarding requests from the server to the router.
     * 
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getServerProxy(java.util.Map<String, String> __ctx, Callback_Router_getServerProxy __cb);

    /**
     * Get the router's server proxy, i.e., the proxy to use for
     * forwarding requests from the server to the router.
     * 
     * @param __result The asynchronous result object.
     * @return The router's server proxy.
     * 
     **/
    public Ice.ObjectPrx end_getServerProxy(Ice.AsyncResult __result);

    /**
     * Add new proxy information to the router's routing table.
     * 
     * <p class="Deprecated">This operation is deprecated, and only used for old
     * Ice clients (older than version 3.1).
     * 
     * @param proxy The proxy to add.
     * 
     * @deprecated addProxy() is deprecated, use addProxies() instead.
     **/
    public void addProxy(Ice.ObjectPrx proxy);

    /**
     * Add new proxy information to the router's routing table.
     * 
     * <p class="Deprecated">This operation is deprecated, and only used for old
     * Ice clients (older than version 3.1).
     * 
     * @param proxy The proxy to add.
     * 
     * @param __ctx The Context map to send with the invocation.
     * @deprecated addProxy() is deprecated, use addProxies() instead.
     **/
    public void addProxy(Ice.ObjectPrx proxy, java.util.Map<String, String> __ctx);

    /**
     * Add new proxy information to the router's routing table.
     * 
     * <p class="Deprecated">This operation is deprecated, and only used for old
     * Ice clients (older than version 3.1).
     * 
     * @param proxy The proxy to add.
     * 
     * @return The asynchronous result object.
     * @deprecated addProxy() is deprecated, use addProxies() instead.
     **/
    public Ice.AsyncResult begin_addProxy(Ice.ObjectPrx proxy);

    /**
     * Add new proxy information to the router's routing table.
     * 
     * <p class="Deprecated">This operation is deprecated, and only used for old
     * Ice clients (older than version 3.1).
     * 
     * @param proxy The proxy to add.
     * 
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     * @deprecated addProxy() is deprecated, use addProxies() instead.
     **/
    public Ice.AsyncResult begin_addProxy(Ice.ObjectPrx proxy, java.util.Map<String, String> __ctx);

    /**
     * Add new proxy information to the router's routing table.
     * 
     * <p class="Deprecated">This operation is deprecated, and only used for old
     * Ice clients (older than version 3.1).
     * 
     * @param proxy The proxy to add.
     * 
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     * @deprecated addProxy() is deprecated, use addProxies() instead.
     **/
    public Ice.AsyncResult begin_addProxy(Ice.ObjectPrx proxy, Ice.Callback __cb);

    /**
     * Add new proxy information to the router's routing table.
     * 
     * <p class="Deprecated">This operation is deprecated, and only used for old
     * Ice clients (older than version 3.1).
     * 
     * @param proxy The proxy to add.
     * 
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     * @deprecated addProxy() is deprecated, use addProxies() instead.
     **/
    public Ice.AsyncResult begin_addProxy(Ice.ObjectPrx proxy, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * Add new proxy information to the router's routing table.
     * 
     * <p class="Deprecated">This operation is deprecated, and only used for old
     * Ice clients (older than version 3.1).
     * 
     * @param proxy The proxy to add.
     * 
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     * @deprecated addProxy() is deprecated, use addProxies() instead.
     **/
    public Ice.AsyncResult begin_addProxy(Ice.ObjectPrx proxy, Callback_Router_addProxy __cb);

    /**
     * Add new proxy information to the router's routing table.
     * 
     * <p class="Deprecated">This operation is deprecated, and only used for old
     * Ice clients (older than version 3.1).
     * 
     * @param proxy The proxy to add.
     * 
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     * @deprecated addProxy() is deprecated, use addProxies() instead.
     **/
    public Ice.AsyncResult begin_addProxy(Ice.ObjectPrx proxy, java.util.Map<String, String> __ctx, Callback_Router_addProxy __cb);

    /**
     * Add new proxy information to the router's routing table.
     * 
     * <p class="Deprecated">This operation is deprecated, and only used for old
     * Ice clients (older than version 3.1).
     * 
     * @param __result The asynchronous result object.
     **/
    public void end_addProxy(Ice.AsyncResult __result);

    /**
     * Add new proxy information to the router's routing table.
     * 
     * @param proxies The proxies to add.
     * 
     * @return Proxies discarded by the router.
     * 
     **/
    public Ice.ObjectPrx[] addProxies(Ice.ObjectPrx[] proxies);

    /**
     * Add new proxy information to the router's routing table.
     * 
     * @param proxies The proxies to add.
     * 
     * @param __ctx The Context map to send with the invocation.
     * @return Proxies discarded by the router.
     * 
     **/
    public Ice.ObjectPrx[] addProxies(Ice.ObjectPrx[] proxies, java.util.Map<String, String> __ctx);

    /**
     * Add new proxy information to the router's routing table.
     * 
     * @param proxies The proxies to add.
     * 
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_addProxies(Ice.ObjectPrx[] proxies);

    /**
     * Add new proxy information to the router's routing table.
     * 
     * @param proxies The proxies to add.
     * 
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_addProxies(Ice.ObjectPrx[] proxies, java.util.Map<String, String> __ctx);

    /**
     * Add new proxy information to the router's routing table.
     * 
     * @param proxies The proxies to add.
     * 
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_addProxies(Ice.ObjectPrx[] proxies, Ice.Callback __cb);

    /**
     * Add new proxy information to the router's routing table.
     * 
     * @param proxies The proxies to add.
     * 
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_addProxies(Ice.ObjectPrx[] proxies, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * Add new proxy information to the router's routing table.
     * 
     * @param proxies The proxies to add.
     * 
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_addProxies(Ice.ObjectPrx[] proxies, Callback_Router_addProxies __cb);

    /**
     * Add new proxy information to the router's routing table.
     * 
     * @param proxies The proxies to add.
     * 
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_addProxies(Ice.ObjectPrx[] proxies, java.util.Map<String, String> __ctx, Callback_Router_addProxies __cb);

    /**
     * Add new proxy information to the router's routing table.
     * 
     * @param __result The asynchronous result object.
     * @return Proxies discarded by the router.
     * 
     **/
    public Ice.ObjectPrx[] end_addProxies(Ice.AsyncResult __result);

    /**
     * Add new proxy information to the router's routing table.
     * 
     * @param __cb The callback object for the operation.
     * @param proxies The proxies to add.
     * 
     **/
    public boolean addProxies_async(AMI_Router_addProxies __cb, Ice.ObjectPrx[] proxies);

    /**
     * Add new proxy information to the router's routing table.
     * 
     * @param __cb The callback object for the operation.
     * @param proxies The proxies to add.
     * 
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean addProxies_async(AMI_Router_addProxies __cb, Ice.ObjectPrx[] proxies, java.util.Map<String, String> __ctx);
}
