// **********************************************************************
//
// Copyright (c) 2003-2010 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************

// Ice version 3.4.1

package Ice;

// <auto-generated>
//
// Generated from file `Router.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>


/**
 * The Ice router interface. Routers can be set either globally with
 * {@link Communicator.setDefaultRouter}, or with <tt>ice_router</tt> on specific
 * proxies.
 * 
 **/
public interface _RouterOperations
{
    /**
     * Get the router's client proxy, i.e., the proxy to use for
     * forwarding requests from the client to the router.
     * 
     * @param __current The Current object for the invocation.
     * @return The router's client proxy.
     * 
     **/
    Ice.ObjectPrx getClientProxy(Ice.Current __current);

    /**
     * Get the router's server proxy, i.e., the proxy to use for
     * forwarding requests from the server to the router.
     * 
     * @param __current The Current object for the invocation.
     * @return The router's server proxy.
     * 
     **/
    Ice.ObjectPrx getServerProxy(Ice.Current __current);

    /**
     * Add new proxy information to the router's routing table.
     * 
     * <p class="Deprecated">This operation is deprecated, and only used for old
     * Ice clients (older than version 3.1).
     * 
     * @param proxy The proxy to add.
     * 
     * @param __current The Current object for the invocation.
     * @deprecated addProxy() is deprecated, use addProxies() instead.
     **/
    void addProxy(Ice.ObjectPrx proxy, Ice.Current __current);

    /**
     * Add new proxy information to the router's routing table.
     * 
     * @param proxies The proxies to add.
     * 
     * @param __current The Current object for the invocation.
     * @return Proxies discarded by the router.
     * 
     **/
    Ice.ObjectPrx[] addProxies(Ice.ObjectPrx[] proxies, Ice.Current __current);
}
